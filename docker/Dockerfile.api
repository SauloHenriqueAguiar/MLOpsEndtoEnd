# Multi-stage Dockerfile for FastAPI application
# Optimized for production with security and performance

# ================================
# Stage 1: Base Dependencies
# ================================
FROM python:3.9-slim as base

# Metadados
LABEL maintainer="MLOps Team"
LABEL description="House Price Prediction API"
LABEL version="1.0.0"

# Definir variáveis de ambiente
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Criar usuário não-root para segurança
RUN groupadd -r appuser && \
    useradd -r -g appuser -d /app -s /sbin/nologin appuser

# Instalar dependências do sistema necessárias
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# ================================
# Stage 2: Dependencies
# ================================
FROM base as dependencies

# Copiar requirements primeiro para cache de layer
COPY requirements.txt /tmp/requirements.txt

# Instalar dependências Python
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# ================================
# Stage 3: Application
# ================================
FROM dependencies as application

# Definir diretório de trabalho
WORKDIR /app

# Copiar código fonte
COPY src/ ./src/
COPY configs/ ./configs/

# Criar diretórios necessários
RUN mkdir -p data/{raw,processed,models} logs artifacts

# Copiar arquivos de configuração adicionais se existirem
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Alterar ownership para usuário não-root
RUN chown -R appuser:appuser /app

# Mudar para usuário não-root
USER appuser

# Expor porta
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Comando padrão
CMD ["uvicorn", "src.api.app:app", "--host", "0.0.0.0", "--port", "8000"]

# ================================
# Stage 4: Production (final)
# ================================
FROM application as production

# Configurações específicas para produção
ENV LOG_LEVEL=INFO \
    WORKERS=1 \
    MAX_REQUESTS=1000 \
    MAX_REQUESTS_JITTER=50 \
    TIMEOUT=30

# Comando otimizado para produção
CMD ["uvicorn", "src.api.app:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "${WORKERS}", \
     "--log-level", "${LOG_LEVEL}", \
     "--access-log", \
     "--use-colors"]